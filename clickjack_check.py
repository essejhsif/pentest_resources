import httplib2
import urllib2
import sys
from BeautifulSoup import BeautifulSoup, SoupStrainer

visited = []

def is_framing_allowed(url):
  request = urllib2.Request(url)
  request.add_header("Referer", url) # you should put your real URL here
  opener = urllib2.urlopen(request)
  # Returns True if ANY x-frame-options header is present
  # the only options at present are DENY and SAMEORIGIN, either of which means you can't frame
  return "x-frame-options" in opener.headers.dict

def traverse(url, key):
  http = httplib2.Http()
  status, response = http.request(url)
  
  for link in BeautifulSoup(response, parseOnlyThese=SoupStrainer('a')):
   try:
    if link is not None and link['href'] is not None and 'http' in str(link['href']):
      if link['href'] not in visited and key in str(link['href']):
	try:
          output = link['href'] + "," + str(is_framing_allowed(url))
	  if 'False' in output:
	    print output
	    visited.append(link['href'])
	    traverse(link['href'], key)
        except:
          i=0 # do nothing
   except: i=0 # do nothing

if __name__ == "__main__":
  try:
    url = str(sys.argv[1]).rstrip().lstrip()
    key = str(sys.argv[2]).rstrip().lstrip()
    print "URL: " + url + " Key: " + key
    traverse(url, key)
  except:
    print "Usage: python clickjack_check.py <site>"
    sys.exit()
